version: '3.7'

volumes:
  db_data:
  drupal_data:
  logs_data:


networks:
  db_network:
    driver: bridge
  frontend_network:
    driver: bridge
  elk_network:
    driver: bridge


secrets:
  db_host:
    file: ./secrets/db_host
  drupal_salt:
    file: ./secrets/drupal_salt
  mysql_database:
    file: ./secrets/mysql_database
  mysql_host:
    file: ./secrets/mysql_host
  mysql_password:
    file: ./secrets/mysql_password
  mysql_root_password:
    file: ./secrets/mysql_root_password
  mysql_user:
    file: ./secrets/mysql_user
  web_group:
    file: ./secrets/web_group
  web_user:
    file: ./secrets/web_user


services:
  nginx:
    image: nginx:1.17.0
    container_name: nginx
    environment:
      NGINX_SERVER_ROOT: /drupal_app/web
    volumes:
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - drupal_data:/drupal_app
    networks:
      - frontend_network
      - elk_network
    ports:
      - "5000:80"
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
    depends_on:
      - webapp
    restart: always

  webapp:
    build:
      context: .
      dockerfile: DrupalDockerfile
    container_name: webapp
    # env_file: .env
    secrets:
      - drupal_salt
      - mysql_database
      - mysql_user
      - mysql_password
      - mysql_host
    volumes:
      - ./config/drupal/php.ini-development:/usr/local/etc/php/php.ini
      - ./drupal_sync:/drupal_sync
      - ./gnatty_theme:/drupal_app/web/themes/contrib
      - drupal_data:/drupal_app
    networks:
      - db_network
      - frontend_network
      - elk_network
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
    depends_on:
      - db
      - logstash
      - elasticsearch
      - kibana
    restart: always

  db:
    image: mysql:8.0.16
    container_name: db
    env_file: .env
    # environment:
    #   MYSQL_ROOT_PASSWORD: /run/secrets/mysql_root_password
    #   MYSQL_USER: /run/secrets/mysql_user
    #   MYSQL_PASSWORD: /run/secrets/mysql_password
    #   MYSQL_DATABASE: /run/secrets/mysql_database
    #   MYSQL_HOST: /run/secrets/mysql_host
    # secrets:
    #   - mysql_root_password
    #   - mysql_user
    #   - mysql_password
    #   - mysql_database
    #   - mysql_host
    volumes:
      - db_data:/var/lib/mysql
      - ./db_shared:/docker-entrypoint-initdb.d/
    networks:
      - db_network
      - elk_network
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
    restart: always
    command: --default-authentication-plugin=mysql_native_password

  logstash:
    image: logstash:7.1.1
    container_name: logstash
    networks:
      - elk_network
    environment:
      LS_JAVA_OPTS: "-Xmx1g -Xms1g"
    volumes:
      - ./config/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "12201:12201/udp"
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.1.1
    container_name: kibana
    depends_on:
      - logstash
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - elk_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - discovery.type=single-node
    volumes:
      - logs_data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elk_network
    ports:
      - "9200:9200"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:4.7
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      PMA_ARBITRARY: 0
      PMA_PORT: 3306
    networks:
      - db_network
    volumes:
      - /sessions
    depends_on:
      - db
    restart: always
    ports:
      - "5001:80"

  # ssh:
  #   image: rastasheep/ubuntu-sshd:18.04
  #   env_file: .env
  #   container_name: ssh
  #   volumes:
  #     - drupal_data:/drupal_app
  #     - ./config/ssh/ssh_entrypoint.sh:/tmp/ssh_entrypoint.sh
  #   entrypoint: /tmp/ssh_entrypoint.sh
  #   depends_on:
  #     - webapp
  #   ports:
  #     - "5022:22"

  # httpd:
  #   image: httpd:2.4.39
  #   container_name: httpd
  #   volumes:
  #     - ./config/httpd/httpd.conf:/usr/local/apache2/conf/httpd.conf
  #     - drupal_data:/usr/local/apache2/htdocs/
  #   networks:
  #     - frontend_network
  #   ports:
  #     - "5005:80"
  #   depends_on:
  #     - webapp
  #   restart: always
